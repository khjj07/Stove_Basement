go.property("direction", vmath.vector3())
go.property("force", 0)
go.property("gravity", vmath.vector3(0,-40,0))
go.property("damage", 1)
go.property("particle", msg.url())
local function apply_normal_force(self,distance,normal)
	go.set_position(go.get_position()+distance*normal)
	go.cancel_animations(".", "rotation")
	msg.post("#hitbox", "disable")
	self.vel=self.vel*0.5+normal*vmath.length(self.vel*0.7)
	timer.delay(1, false, function()
		go.animate("#sprite", "tint.w", go.PLAYBACK_ONCE_FORWARD, 0, go.EASING_LINEAR, 0.5)
		timer.delay(1, false, function()
			go.delete()
		end)
	end)
end
function init(self)
	self.vel=self.force*self.direction
	particlefx.play(self.particle)
	go.animate(".", "rotation", go.PLAYBACK_LOOP_FORWARD, vmath.quat_rotation_z(-1.57), go.EASING_LINEAR, 0.1)
end

function update(self, dt)
	local pos=go.get_position()+self.vel*dt
	go.set_position(pos)
	
	self.vel=self.vel+self.gravity
end

function on_message(self, message_id, message, sender)
	if message_id==hash("contact_point_response") then
		apply_normal_force(self,message.distance,message.normal)
	end
	if message_id==hash("trigger_response") then
		msg.post(message.other_id,"hit",{damage=self.damage,direction=self.vel})
		msg.post("#hitbox", "disable")
	end	
end