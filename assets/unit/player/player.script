local Unit = require "assets.unit.unit"
local CAM = msg.url("default:/camera")
go.property("speed", 70) --self.speed=70
go.property("jumpforce", 400)
go.property("gravity", vmath.vector3(0,-20,0))
go.property("friction", 0.05)
go.property("hp", 20)
go.property("maxhp", 20)
go.property("hp_decrease_time", 1)
go.property("throw_force", 300)
go.property("current_projectile", msg.url("#hotpack"))
function init(self)
	Unit.init(self, dt)
	Unit.init_hp(self)
	self.throw_dir=vmath.vector3()
	self.direction=vmath.vector3(1,1,0)
	msg.post(".", "acquire_input_focus")
end

function update(self, dt)
	Unit.animation(self)
	Unit.update(self, dt)
	Unit.update_hp(self)
	msg.post(CAM, "update",{vel=self.vel})
	self.throw_dir=self.direction
end

function on_message(self, message_id, message, sender)
	Unit.on_message(self, message_id, message, sender)
	if message_id==hash("eat") then
		if self.maxhp>self.hp then
			self.hp=self.maxhp
		end
	end	
end

	
function on_input(self, action_id, action)
	if action_id ==hash("jump") and self.jumpable then
		Unit.jump(self, self.jumpforce)
	elseif action_id ==hash("left") then
		Unit.move(self, "left")
		self.throw_dir=vmath.vector3(-1,1,0)
		self.direction=vmath.vector3(-1,1,0)
	elseif action_id ==hash("right") then
		Unit.move(self, "right")
		self.throw_dir=vmath.vector3(1,1,0)
		self.direction=vmath.vector3(1,1,0)
	elseif action_id==hash("up") then
		self.throw_dir=vmath.vector3(0,1,0)
	elseif action_id==hash("down") then
		self.throw_dir=vmath.vector3(0,-1,0)
	end
	if action_id==hash("touch") and action.pressed then 
		local instance = factory.create(self.current_projectile,go.get_position(),nil,{direction=self.throw_dir,force=self.throw_force})
	end
end